TPS 1
3) 	la		$a0, str1
	addi 	$v0, $zero, 4
	syscall
4)	addi $v0, $zero, 5
	syscall
	move 	$t3, $v0

TPS 2
1) The output should be 29, and it does.
5) Recursion will return to register $v0. We need $v0 to syscall, so we will move the return value of recursion into $a0 to print it with syscall.
7) We have 3 integers worth of storage. We should store the return address.
10) We modify $a0 during recursion, so we need to save it to the stack in order to preserve its value.
12) recursion(m-1) will use the current value of $a0 which holds the value of either -1 or 0, instead m-1.
14) There isn't a need to update the return value at this point, as the return value has already been added to $v0.
15) We need to load the original $ra to return properly.
